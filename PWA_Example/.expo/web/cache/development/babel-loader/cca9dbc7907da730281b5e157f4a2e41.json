{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { UnavailabilityError } from '@unimodules/core';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ExponentPrint from \"./ExponentPrint\";\nexport var Orientation = ExponentPrint.Orientation;\nexport function printAsync(options) {\n  return _regeneratorRuntime.async(function printAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(Platform.OS === 'web')) {\n            _context.next = 4;\n            break;\n          }\n\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(ExponentPrint.print(options));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 4:\n          if (!(!options.uri && !options.html && Platform.OS === 'ios' && !options.markupFormatterIOS)) {\n            _context.next = 6;\n            break;\n          }\n\n          throw new Error('Must provide either `html` or `uri` to print');\n\n        case 6:\n          if (!(options.uri && options.html)) {\n            _context.next = 8;\n            break;\n          }\n\n          throw new Error('Must provide exactly one of `html` and `uri` but both were specified');\n\n        case 8:\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(ExponentPrint.print(options));\n\n        case 10:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function selectPrinterAsync() {\n  return _regeneratorRuntime.async(function selectPrinterAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!ExponentPrint.selectPrinter) {\n            _context2.next = 4;\n            break;\n          }\n\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(ExponentPrint.selectPrinter());\n\n        case 3:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 4:\n          throw new UnavailabilityError('Print', 'selectPrinterAsync');\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function printToFileAsync() {\n  var options,\n      _args3 = arguments;\n  return _regeneratorRuntime.async(function printToFileAsync$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(ExponentPrint.printToFileAsync(options));\n\n        case 3:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["d:/Visual Studio/GitHub/PWA_Example/PWA_Example/src/pages/Print.tsx"],"names":["UnavailabilityError","ExponentPrint","Orientation","printAsync","options","Platform","OS","print","uri","html","markupFormatterIOS","Error","selectPrinterAsync","selectPrinter","printToFileAsync"],"mappings":";AAAA,SAASA,mBAAT,QAAoC,kBAApC;;AAEA,OAAOC,aAAP;AACA,OAAO,IAAMC,WAAW,GAAGD,aAAa,CAACC,WAAlC;AACP,OAAO,SAAeC,UAAf,CAA0BC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBACCC,QAAQ,CAACC,EAAT,KAAgB,KADjB;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAEcL,aAAa,CAACM,KAAd,CAAoBH,OAApB,CAFd;;AAAA;AAAA;;AAAA;AAAA,gBAIC,CAACA,OAAO,CAACI,GAAT,IAAgB,CAACJ,OAAO,CAACK,IAAzB,IAAiCJ,QAAQ,CAACC,EAAT,KAAgB,KAAjD,IAA0D,CAACF,OAAO,CAACM,kBAJpE;AAAA;AAAA;AAAA;;AAAA,gBAKO,IAAIC,KAAJ,CAAU,8CAAV,CALP;;AAAA;AAAA,gBAOCP,OAAO,CAACI,GAAR,IAAeJ,OAAO,CAACK,IAPxB;AAAA;AAAA;AAAA;;AAAA,gBAQO,IAAIE,KAAJ,CAAU,sEAAV,CARP;;AAAA;AAAA;AAAA,2CAUUV,aAAa,CAACM,KAAd,CAAoBH,OAApB,CAVV;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYP,OAAO,SAAeQ,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA,eACCX,aAAa,CAACY,aADf;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAEcZ,aAAa,CAACY,aAAd,EAFd;;AAAA;AAAA;;AAAA;AAAA,gBAIG,IAAIb,mBAAJ,CAAwB,OAAxB,EAAiC,oBAAjC,CAJH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMP,OAAO,SAAec,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgCV,UAAAA,OAAhC,8DAA0C,EAA1C;AAAA;AAAA,2CACUH,aAAa,CAACa,gBAAd,CAA+BV,OAA/B,CADV;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\r\nimport { Platform } from 'react-native';\r\nimport ExponentPrint from './ExponentPrint';\r\nexport const Orientation = ExponentPrint.Orientation;\r\nexport async function printAsync(options) {\r\n    if (Platform.OS === 'web') {\r\n        return await ExponentPrint.print(options);\r\n    }\r\n    if (!options.uri && !options.html && Platform.OS === 'ios' && !options.markupFormatterIOS) {\r\n        throw new Error('Must provide either `html` or `uri` to print');\r\n    }\r\n    if (options.uri && options.html) {\r\n        throw new Error('Must provide exactly one of `html` and `uri` but both were specified');\r\n    }\r\n    return await ExponentPrint.print(options);\r\n}\r\nexport async function selectPrinterAsync() {\r\n    if (ExponentPrint.selectPrinter) {\r\n        return await ExponentPrint.selectPrinter();\r\n    }\r\n    throw new UnavailabilityError('Print', 'selectPrinterAsync');\r\n}\r\nexport async function printToFileAsync(options = {}) {\r\n    return await ExponentPrint.printToFileAsync(options);\r\n}"]},"metadata":{},"sourceType":"module"}