{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { UnavailabilityError } from '@unimodules/core';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ExponentPrint from \"./ExponentPrint\";\nimport { FilePrintOptions, FilePrintResult, OrientationType, PrintOptions, Printer } from \"./Print.types\";\nexport { FilePrintOptions, FilePrintResult, OrientationType, PrintOptions, Printer };\nexport var Orientation = ExponentPrint.Orientation;\nexport function printAsync(options) {\n  return _regeneratorRuntime.async(function printAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(Platform.OS === 'web')) {\n            _context.next = 4;\n            break;\n          }\n\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(ExponentPrint.print(options));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 4:\n          if (!(!options.uri && !options.html && Platform.OS === 'ios' && !options.markupFormatterIOS)) {\n            _context.next = 6;\n            break;\n          }\n\n          throw new Error('Must provide either `html` or `uri` to print');\n\n        case 6:\n          if (!(options.uri && options.html)) {\n            _context.next = 8;\n            break;\n          }\n\n          throw new Error('Must provide exactly one of `html` and `uri` but both were specified');\n\n        case 8:\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(ExponentPrint.print(options));\n\n        case 10:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function selectPrinterAsync() {\n  return _regeneratorRuntime.async(function selectPrinterAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!ExponentPrint.selectPrinter) {\n            _context2.next = 4;\n            break;\n          }\n\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(ExponentPrint.selectPrinter());\n\n        case 3:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 4:\n          throw new UnavailabilityError('Print', 'selectPrinterAsync');\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function printToFileAsync() {\n  var options,\n      _args3 = arguments;\n  return _regeneratorRuntime.async(function printToFileAsync$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(ExponentPrint.printToFileAsync(options));\n\n        case 3:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["d:/Visual Studio/GitHub/PWA_Example/PWA_Example/src/Print/Print.ts"],"names":["UnavailabilityError","ExponentPrint","FilePrintOptions","FilePrintResult","OrientationType","PrintOptions","Printer","Orientation","printAsync","options","Platform","OS","print","uri","html","markupFormatterIOS","Error","selectPrinterAsync","selectPrinter","printToFileAsync"],"mappings":";AAAA,SAASA,mBAAT,QAAoC,kBAApC;;AAGA,OAAOC,aAAP;AACA,SACEC,gBADF,EAEEC,eAFF,EAGEC,eAHF,EAIEC,YAJF,EAKEC,OALF;AAQA,SAASJ,gBAAT,EAA2BC,eAA3B,EAA4CC,eAA5C,EAA6DC,YAA7D,EAA2EC,OAA3E;AAEA,OAAO,IAAMC,WAA4B,GAAGN,aAAa,CAACM,WAAnD;AAEP,OAAO,SAAeC,UAAf,CAA0BC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBACDC,QAAQ,CAACC,EAAT,KAAgB,KADf;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAEUV,aAAa,CAACW,KAAd,CAAoBH,OAApB,CAFV;;AAAA;AAAA;;AAAA;AAAA,gBAID,CAACA,OAAO,CAACI,GAAT,IAAgB,CAACJ,OAAO,CAACK,IAAzB,IAAiCJ,QAAQ,CAACC,EAAT,KAAgB,KAAjD,IAA0D,CAACF,OAAO,CAACM,kBAJlE;AAAA;AAAA;AAAA;;AAAA,gBAKG,IAAIC,KAAJ,CAAU,8CAAV,CALH;;AAAA;AAAA,gBAODP,OAAO,CAACI,GAAR,IAAeJ,OAAO,CAACK,IAPtB;AAAA;AAAA;AAAA;;AAAA,gBAQG,IAAIE,KAAJ,CAAU,sEAAV,CARH;;AAAA;AAAA;AAAA,2CAUQf,aAAa,CAACW,KAAd,CAAoBH,OAApB,CAVR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaP,OAAO,SAAeQ,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA,eACDhB,aAAa,CAACiB,aADb;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAEUjB,aAAa,CAACiB,aAAd,EAFV;;AAAA;AAAA;;AAAA;AAAA,gBAKC,IAAIlB,mBAAJ,CAAwB,OAAxB,EAAiC,oBAAjC,CALD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQP,OAAO,SAAemB,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgCV,UAAAA,OAAhC,8DAA4D,EAA5D;AAAA;AAAA,2CACQR,aAAa,CAACkB,gBAAd,CAA+BV,OAA/B,CADR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\nimport { Platform } from 'react-native';\n\nimport ExponentPrint from './ExponentPrint';\nimport {\n  FilePrintOptions,\n  FilePrintResult,\n  OrientationType,\n  PrintOptions,\n  Printer,\n} from './Print.types';\n\nexport { FilePrintOptions, FilePrintResult, OrientationType, PrintOptions, Printer };\n\nexport const Orientation: OrientationType = ExponentPrint.Orientation;\n\nexport async function printAsync(options: PrintOptions): Promise<void> {\n  if (Platform.OS === 'web') {\n    return await ExponentPrint.print(options);\n  }\n  if (!options.uri && !options.html && Platform.OS === 'ios' && !options.markupFormatterIOS) {\n    throw new Error('Must provide either `html` or `uri` to print');\n  }\n  if (options.uri && options.html) {\n    throw new Error('Must provide exactly one of `html` and `uri` but both were specified');\n  }\n  return await ExponentPrint.print(options);\n}\n\nexport async function selectPrinterAsync(): Promise<Printer> {\n  if (ExponentPrint.selectPrinter) {\n    return await ExponentPrint.selectPrinter();\n  }\n\n  throw new UnavailabilityError('Print', 'selectPrinterAsync');\n}\n\nexport async function printToFileAsync(options: FilePrintOptions = {}): Promise<FilePrintResult> {\n  return await ExponentPrint.printToFileAsync(options);\n}\n"]},"metadata":{},"sourceType":"module"}